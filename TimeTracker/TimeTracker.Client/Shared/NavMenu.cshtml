@using TimeTracker.Client.Services


   <nav class="navbar navbar-expand-lg navbar-light bg-faded">
        <a class="navbar-brand" href="#">Time Tracker</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div id="navbarNavDropdown" class="navbar-collapse collapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
            </ul>
            <ul class="navbar-nav">
                @if (!state.LoggedIn)
                {
                <li class="nav-item">
                    <a class="nav-link" href="/login">Login</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/register">Register</a>
                </li>
                }
                else
                {
                    <li class="nav-item">
                    <a class="nav-link">Welcome @state.User.Name!</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" onclick="@Logout">Logout</a>
                </li>
                }
            </ul>
        </div>
    </nav>

@functions {
    [Parameter]
    private AppState state { get; set; }
    private void Logout()
    {
        state.Logout();
    }

    protected override void OnInit()
    {
        base.OnInit();
        state.OnChange += StateHasChanged;
    }
}