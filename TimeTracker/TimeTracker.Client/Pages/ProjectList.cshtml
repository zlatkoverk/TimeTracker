@using TimeTracker.Shared
@using TimeTracker.Shared.Model

<div>
    <button class="btn" onclick="@(()=>ChangeListState())">Show other projects</button>
</div>
@if (Projects != null)
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in Projects)
            {
                <tr onclick="@(()=>SetActiveProject(project))">
                    <td>@project.Name</td>
                    <td>@project.Description</td>
                    @if (ShowActive)
                    {
                        <td><button class="btn btn-danger" onclick=@(() => ChangeState(project))><span class="glyphicon glyphicon-lock"></span>Archive</button></td>
                    }
                    else
                    {
                        <td><button class="btn btn-success" onclick=@(()=>ChangeState(project))><span class="glyphicon glyphicon-lock"></span>Activate</button></td>
                    }
                </tr>
            }
            <tr>
                <td><input class="form-control" type="text" placeholder="Name" bind="@Name" required/></td>
                <td><input class="form-control" type="text" placeholder="Description" bind="@Description"/></td>
                <td><button class="btn btn-success" onclick="@CreateProject"><span class="glyphicon glyphicon-floppy-disk"></span>Create</button></td>
            </tr>
        </tbody>
    </table>
}

@functions
{
    [Parameter]
    private IList<Project> Projects { get; set; }
    private string Name { get; set; }
    private string Description { get; set; }
    [Parameter]
    private bool ShowActive { get; set; }

    [Parameter]
    private Func<CreateProjectModel, Task> OnCreate { get; set; }
    [Parameter]
    private Func<Project, Task> OnArchiveProject { get; set; }
    [Parameter]
    private Guid UserId { get; set; }
    [Parameter]
    private Func<Task> ChangeListState { get; set; }
    [Parameter]
    private Func<Project, Task> SetActiveProject { get; set; }

    private void ChangeState(Project project)
    {
        OnArchiveProject(project);
    }

    private void CreateProject()
    {
        if (string.IsNullOrWhiteSpace(Name))
        {
            return;
        }
        OnCreate(new CreateProjectModel(Name, Description, UserId));
        Name = "";
        Description = "";
    }
}