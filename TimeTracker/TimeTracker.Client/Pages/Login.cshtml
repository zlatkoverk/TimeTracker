@using TimeTracker.Shared.Model
@using TimeTracker.Client.Services
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper uriHelper

<div class="container">
                <form class="form-horizontal" role="form">
                    <div class="row">
                        <div class="col-md-3"></div>
                        <div class="col-md-6">
                            <h2>Login</h2>
                            <hr>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 field-label-responsive">
                            <label for="username">Username</label>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                                    <div class="input-group-addon" style="width: 2.6rem"><i class="fa fa-at"></i></div>
                                    <input type="text" class="form-control" placeholder="user123" required autofocus bind="@Username" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-control-feedback">
                                <span class="text-danger align-middle">
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 field-label-responsive">
                            <label for="password">Password</label>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group has-danger">
                                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                                    <div class="input-group-addon" style="width: 2.6rem"><i class="fa fa-key"></i></div>
                                    <input type="password" class="form-control"
                                           placeholder="Password" required bind="@Password"/>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-control-feedback">
                                <span class="text-danger align-middle">
                                </span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-3"></div>
                        <div class="col-md-6">
                            <span class="text-danger align-middle">@Message</span>
                        </div>
                        <div class="row">
                            <div class="col-md-3"></div>
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-success" onclick="@CheckLogin"><i class="fa fa-user-plus"></i> Login</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

@functions {
    [Parameter]
    private AppState appState { get; set; }
    private string Username;
    private string Password;
    private string Message;
    private Func<LoginModel, Task> LoginFunc;

    public async void CheckLogin()
    {
        if(string.IsNullOrWhiteSpace(Username))
        {
            Message = "You didn't enter username";
            return;
        }
        if (string.IsNullOrEmpty(Password))
        {
            Message = "You didn't enter password";
            return;
        }
        if (!appState.LoggedIn)
        {
            await LoginFunc(new LoginModel(Username, Password));
        }
        if(appState.LoggedIn)
        {
            Message = "";
        }
        else
        {
            Message = "User with that username and password does not exist";
        }
    }

    protected override void OnInit()
    {
        LoginFunc = appState.Login;
        appState.OnChange += StateHasChanged;
    }
}